
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 24
Server version: 5.5.16 MySQL Community Server (GPL)

Copyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> Drop database workers;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| hibernate_db       |
| java               |
| mysql              |
| performance_schema |
| test               |
+--------------------+
6 rows in set (0.02 sec)

mysql> CREATE DATABASE WORKERS;
Query OK, 1 row affected (0.00 sec)

mysql> USE WORKERS;
Database changed
mysql>  CREATE TABLE Worker (
    -> WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    -> FIRST_NAME VARCHAR(25),
    -> LAST_NAME VARCHAR(25),
    -> SALARY FLOAT(15),
    -> JOINING_DATE DATETIME,
    -> DEPARTMENT CHAR(25)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
    -> VALUES  (001, 'Smirithi', 'B', 100000, '14-02-20 09.00.00', 'HR'),
    -> (002, 'Shivani', 'Shejawal', 10000000, '14-06-11 09.00.00', 'CEO'),
    -> (003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'Admin'),
    -> (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
    -> (005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
    -> (006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
    -> (007, 'Satish', 'k', 75000, '14-01-20 09.00.00', 'Account'),
    -> (008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');
Query OK, 8 rows affected (0.00 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql>  SELECT * FROM WORKER;
+-----------+------------+-----------+----------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY   | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+----------+---------------------+------------+
|         1 | Smirithi   | B         |   100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Shivani    | Shejawal  | 10000000 | 2014-06-11 09:00:00 | CEO        |
|         3 | Vishal     | Singhal   |   300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     |   500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     |   500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     |   200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | k         |    75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |    90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+----------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> -- SQL QUESTIONS
mysql>  -- 1) WRITE A QUERY TO FETCH THE FIRST_NAME FROM WORKER TABLE USING ALIAS NAME AS WORKER_NAME.
mysql> SELECT FIRST_NAME AS WORKER_NAME FROM WORKER ;
+-------------+
| WORKER_NAME |
+-------------+
| Smirithi    |
| Shivani     |
| Vishal      |
| Amitabh     |
| Vivek       |
| Vipul       |
| Satish      |
| Geetika     |
+-------------+
8 rows in set (0.00 sec)

mysql> -- 2) WRITE A QUERY TO FETCH UNIQUE VALUES OF DEPARTMENT FROM THE WORKER TABLE.
mysql> SELECT DISTINCT(DEPARTMENT) FROM WORKER;
+------------+
| DEPARTMENT |
+------------+
| HR         |
| CEO        |
| Admin      |
| Account    |
+------------+
4 rows in set (0.00 sec)

mysql> -- 3) WRITE A QUERY TO SHOW THE LAST 5 RECORDS FROM THE WORKER TABLE.
mysql> SELECT * FROM WORKER
    -> LIMIT 5;
+-----------+------------+-----------+----------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY   | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+----------+---------------------+------------+
|         1 | Smirithi   | B         |   100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Shivani    | Shejawal  | 10000000 | 2014-06-11 09:00:00 | CEO        |
|         3 | Vishal     | Singhal   |   300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     |   500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     |   500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+----------+---------------------+------------+
5 rows in set (0.00 sec)

mysql> -- 4) WRITE A QUERY TO PRINT THE FIRST TCEOEE CHARACTERS OF FIRST_NAME FROM WORKER TABLE.
mysql> mysql>
    -> mysql> SELECT left(FIRST_NAME,3) AS FIRST_NAME_3_CHAR
    ->     -> FROM WORKER;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mysql>
mysql> SELECT left(FIRST_NAME,3) AS FIRST_NAME_3_CHAR
    -> FROM WORKER' at line 1
mysql>  -- 4) WRITE A QUERY TO PRINT THE FIRST TCEOEE CHARACTERS OF FIRST_NAME FROM WORKER TABLE.
mysql> SELECT left(FIRST_NAME,3) AS FIRST_NAME_3_CHAR
    -> FROM WORKER;
+-------------------+
| FIRST_NAME_3_CHAR |
+-------------------+
| Smi               |
| Shi               |
| Vis               |
| Ami               |
| Viv               |
| Vip               |
| Sat               |
| Gee               |
+-------------------+
8 rows in set (0.00 sec)

mysql> -- 5) WRITE AN SQL QUERY TO FIND THE POSITION OF THE ALPHABET 'a' IN THE FIRST_NAME COLUMN 'Amitabh' FROM WORKER TABLE.
mysql>  SELECT LOCATE("a" , "Amitabh",2);
+---------------------------+
| LOCATE("a" , "Amitabh",2) |
+---------------------------+
|                         5 |
+---------------------------+
1 row in set (0.01 sec)

mysql> -- 6) WRITE AN SQL QUERY TO PRINT THE NAME OF THE EMPLOYEES HAVING THE HIGHEST SALARY IN EACH DEPARTMENT
mysql>  WITH SALARY_RANKING AS
    -> (SELECT *, RANK()
    ->  FROM WORKER)
    -> SELECT FIRST_NAME, LAST_NAME, DEPARTMENT, SALARY
    -> FROM SALARY_RANKING
    -> WHERE RANKING=1 ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SALARY_RANKING AS
(SELECT *, RANK()
 FROM WORKER)
SELECT FIRST_NAME, LAST_NAME, ' at line 1
mysql> SELECT RTRIM(FIRST_NAME) AS TRIMMED_FIRST_NAMES
    ->   FROM WORKER;
+---------------------+
| TRIMMED_FIRST_NAMES |
+---------------------+
| Smirithi            |
| Shivani             |
| Vishal              |
| Amitabh             |
| Vivek               |
| Vipul               |
| Satish              |
| Geetika             |
+---------------------+
8 rows in set (0.01 sec)

mysql> -- 8) WRITE AN SQL QUERY THAT FETCHES THE UNIQUE VALUES OF DEPARTMENT FROM WORKER TABLE AND PRINTS ITS LENGTH.
mysql>  SELECT DISTINCT(DEPARTMENT) AS UNIQUE_DEPARTMENTS, LENGTH(DEPARTMENT) AS LENGTH_OF_DEPT_NAMES
    ->  FROM WORKER;
+--------------------+----------------------+
| UNIQUE_DEPARTMENTS | LENGTH_OF_DEPT_NAMES |
+--------------------+----------------------+
| HR                 |                    2 |
| CEO                |                    3 |
| Admin              |                    5 |
| Account            |                    7 |
+--------------------+----------------------+
4 rows in set (0.00 sec)

mysql> -- 10) WRITE AN SQL QUERY TO PRINT THE FIRST_NAME COLUMN FROM THE WORKER TABLE AFTER REPLACING 'a' WITH 'A'.
mysql> SELECT REPLACE(FIRST_NAME,'a','A') AS REPLACED_NAME
    -> FROM WORKER;
+---------------+
| REPLACED_NAME |
+---------------+
| Smirithi      |
| ShivAni       |
| VishAl        |
| AmitAbh       |
| Vivek         |
| Vipul         |
| SAtish        |
| GeetikA       |
+---------------+
8 rows in set (0.00 sec)

mysql> -- 11) WRITE AN SQL QUERY TO PRINT ALL WORKER DETAILS FROM THE WORKER TABLE ORDER BY FIRST_NAME ASCENDING AND DEPARTMENT DESCENDING.
mysql> SELECT *
    ->     FROM WORKER
    -> ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;
+-----------+------------+-----------+----------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY   | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+----------+---------------------+------------+
|         4 | Amitabh    | Singh     |   500000 | 2014-02-20 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |    90000 | 2014-04-11 09:00:00 | Admin      |
|         7 | Satish     | k         |    75000 | 2014-01-20 09:00:00 | Account    |
|         2 | Shivani    | Shejawal  | 10000000 | 2014-06-11 09:00:00 | CEO        |
|         1 | Smirithi   | B         |   100000 | 2014-02-20 09:00:00 | HR         |
|         6 | Vipul      | Diwan     |   200000 | 2014-06-11 09:00:00 | Account    |
|         3 | Vishal     | Singhal   |   300000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     |   500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+----------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> -- 12) WRITE AN SQL QUERY TO FETCH THE NAMES OF THE WORKERS WHO EARN THE HIGHEST SALARY.
mysql>
mysql> SELECT FIRST_NAME, LAST_NAME, SALARY
    -> FROM WORKER
    -> WHERE SALARY = (SELECT SALARY FROM WORKER ORDER BY SALARY DESC LIMIT 1);
+------------+-----------+----------+
| FIRST_NAME | LAST_NAME | SALARY   |
+------------+-----------+----------+
| Shivani    | Shejawal  | 10000000 |
+------------+-----------+----------+
1 row in set (0.00 sec)

mysql> -- 13) WRITE AN SQL QUERY TO PRINT DETAILS OF WORKERS EXCLUDING FIRST_NAME'S 'Vipul' AND 'Satish' FROM WORKER TABLE.
mysql> SELECT *
    ->     FROM WORKER
    -> WHERE FIRST_NAME NOT IN ('Vipul', 'Satish');
+-----------+------------+-----------+----------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY   | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+----------+---------------------+------------+
|         1 | Smirithi   | B         |   100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Shivani    | Shejawal  | 10000000 | 2014-06-11 09:00:00 | CEO        |
|         3 | Vishal     | Singhal   |   300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     |   500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     |   500000 | 2014-06-11 09:00:00 | Admin      |
|         8 | Geetika    | Chauhan   |    90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+----------+---------------------+------------+
6 rows in set (0.00 sec)

mysql> -- 14) WRITE AN SQL QUERY TO PRINT DETAILS OF THE WORKERS WHOSE FIRST_NAME ENDS WITH 'h' AND CONTAINS SIX ALPHABETS.
mysql> SELECT *
    ->     FROM WORKER
    -> WHERE RIGHT(FIRST_NAME,1) = 'h' AND LENGTH(FIRST_NAME)=6;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         7 | Satish     | k         |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

mysql> -- 16) WRITE AN SQL QUERY TO PRINT DETAILS OF THE WORKERS WHO HAVE JOINED IN FEB 2014.
mysql> SELECT *
    ->   FROM WORKER
    -> WHERE JOINING_DATE LIKE '2014-02-%';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Smirithi   | B         | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set, 1 warning (0.00 sec)

mysql> -- 17) WRITE AN SQL QUERY TO FETCH DUPLICATE RECORDS HAVING MATCHING DATA IN SOME FIELDS OF A TABLE.
mysql> -- LET US ASSUME THAT WE WANT TO CHECK FOR DUPLICATE RECORDS WHICH HAVE MATCHING DATA IN THE SALARY
mysql> SELECT SALARY, DEPARTMENT ,COUNT(*)
    -> FROM WORKER
    -> GROUP BY  SALARY, DEPARTMENT
    -> HAVING COUNT(*)>1;
+--------+------------+----------+
| SALARY | DEPARTMENT | COUNT(*) |
+--------+------------+----------+
| 500000 | Admin      |        2 |
+--------+------------+----------+
1 row in set (0.00 sec)

mysql> -- 21) WRITE AN SQL QUERY TO FETCH INTERSECTING RECORDS OF TWO TABLES
mysql> -- LET'S CREATE TWO TABLES
mysql> -- CREATE TABLE LIST1
mysql> (
    ->  ID INT,
    -> NAME VARCHAR(100)
    -> );
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ID INT,
NAME VARCHAR(100)
)' at line 2
mysql>  -- 21) WRITE AN SQL QUERY TO FETCH INTERSECTING RECORDS OF TWO TABLES
mysql> -- LET'S CREATE TWO TABLES
mysql> CREATE TABLE LIST1
    -> (
    ->  ID INT,
    -> NAME VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> NAME VARCHAR(100)
    -> INSERT INTO LIST1
    -> VALUES
    -> (1,"Meera")
    -> (2,"Gowri");
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'NAME VARCHAR(100)
INSERT INTO LIST1
VALUES
(1,"Meera")
(2,"Gowri")' at line 1
mysql> INSERT INTO LIST1
    -> VALUES
    -> (1,"Meera"),
    ->  (2,"Gowri");
Query OK, 2 rows affected (0.02 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>  CREATE TABLE LIST2 LIKE LIST1;
Query OK, 0 rows affected (0.01 sec)

mysql> INSERT INTO LIST2
    ->  VALUES
    ->  (2,"Gowri"),
    -> (3,"Ved");
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> -- 23) WRITE AN SQL QUERY TO SHOW THE TOP N (SAY 10) RECORDS OF THE TABLE.
mysql> SELECT *
    ->  FROM WORKER
    -> ORDER BY SALARY DESC
    ->  LIMIT 10;
+-----------+------------+-----------+----------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY   | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+----------+---------------------+------------+
|         2 | Shivani    | Shejawal  | 10000000 | 2014-06-11 09:00:00 | CEO        |
|         4 | Amitabh    | Singh     |   500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     |   500000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   |   300000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     |   200000 | 2014-06-11 09:00:00 | Account    |
|         1 | Smirithi   | B         |   100000 | 2014-02-20 09:00:00 | HR         |
|         8 | Geetika    | Chauhan   |    90000 | 2014-04-11 09:00:00 | Admin      |
|         7 | Satish     | k         |    75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+----------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> -- 24) WRITE AN SQL QUERY TO DETERMINE THE NTH(SAY N=5) HIGHEST SALARY FROM A TABLE.
mysql> mysql>
    -> -- 24) WRITE AN SQL QUERY TO DETERMINE THE NTH(SAY N=5) HIGHEST SALARY FROM A TABLE.
    -> -- 24) WRITE AN SQL QUERY TO DETERMINE THE NTH(SAY N=5) HIGHEST SALARY FROM A TABLE.
    -> SELECT SALARY
    ->     -> FROM WORKER
    ->     -> ORDER BY SALARY DESC
    ->     -> LIMIT 4,1;  -- 4=N-1
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mysql>


SELECT SALARY
    -> FROM WORKER
    -> ORDER BY SALARY DESC
    -> LIM' at line 1
mysql> -- 25) WRITE AN SQL QUERY TO DETERMINE THE 5TH(SAY N=5) WITHOUT USING TOP OR LIMIT METHOD.
mysql> WITH SALARY_RANKING AS
    -> (SELECT SALARY, DENSE_RANK()
    -> OVER (ORDER BY SALARY DESC) RANKING
    ->  FROM WORKER )
    -> SELECT SALARY
    -> FROM SALARY_RANKING
    ->  WHERE RANKING=5;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SALARY_RANKING AS
(SELECT SALARY, DENSE_RANK()
OVER (ORDER BY SALARY DESC) RANKI' at line 1
mysql> INSERT INTO WORKER
    ->     -> VALUES (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'); -- ADDING A RECORD WITH SAME SALARY.
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-> VALUES (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin')' at line 2
mysql> SELECT W1.FIRST_NAME, W1.LAST_NAME
    ->  FROM WORKER W1 JOIN WORKER W2
    -> WHERE W1.SALARY= W2.SALARY
    -> AND W1.WORKER_ID != W2.WORKER_ID;
+------------+-----------+
| FIRST_NAME | LAST_NAME |
+------------+-----------+
| Vivek      | Bhati     |
| Amitabh    | Singh     |
+------------+-----------+
2 rows in set
